Question 1: What is the link to your github repository for this lab?
    https://github.com/MahmoodFalmaz/CMPUT404/tree/main/Labs/Lab-4/mysite

Question 2: After starting a brand new Django application and running the runserver command, what does the browser show you?
    It started to develop the server at http://127.0.0.1:8000/

Question 3: After creating the first view within polls, what does the browser show you when navigating to / and to /polls respectively?
    The browser redirect to the following website: http://127.0.0.1:8000/polls with the following text displayed: "Hello, world. You're at the polls index."

Question 4: What is a Django migration and why do we need them?
    Django's migrations are a means for you to propagate changes to your models (adding a field, removing a model, etc.) to your database schema.
    Database migration is critical since it aids in cost savings. Database migration has the advantage of 
    transferring data from an obsolete legacy system to more current software. 
    Moreover, Database migration unifies diverse data so that it may be accessed by many systems.

Question 5: What do you see after you log into the Django adminstration site? From a high levle, how do you get custom models to appear in the Django admin page?
    After we log into the Django adminstration site, as an admin you are able to change and modify the AUTHENTICATION AND AUTHORIZATION sections.
    As a result of the models class that we built in models.py, the custom models display in the Django admin page.

Question 6: What do you see when you go to /polls/38/ in your browser? What about /polls/38/results and /polls/38/vote? 
            What happens when you don’t put a number, and instead use a string? How would you modify the urls.py file to allow arbitrary alphabetic characters?
    When we go to /polls/38/ the browser displays the following text: "You're looking at question 38."
    When we go to /polls/38/results the browser displays the following text: "You're looking at the results of question 38."
    When we go to /polls/38/vote the browser displays the following text: "You're voting on question 38."
    When we don’t put a number, and instead use a string we get the following error: "404 Page Not Found Error."
    A solution will be to change the question_id type from an integer to a string.

Question 7: Why is it a bad idea to hardcode urls into the templates?
    Hard-coding URLs makes it more difficult to change URLs and makes it simpler to link to the wrong page.
    Also, it will require us to manually update and change things 

Question 8: What are the benefits of using Django's generic views over writing views 'the hard way'? 
            When should you use a generic view and when shouldn't you use a generic view?
    Django's generic views were designed to make it easy to use. They encapsulate several basic view construction idioms and 
    patterns so that you can quickly create common data views without having to write a lot of code.
    When you use similar functionality across several views, Generic Views are meant to reduce boilerplate code. It should be used just for that reason.

    



